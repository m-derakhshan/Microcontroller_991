;
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <string.h>
;#include <stdio.h>
;#include <stdlib.h>
;
;
;#define LED_R      PORTD.0
;#define LED_G      PORTD.1
;#define LED_B      PORTD.2
;#define key_prt  PORTC
;#define key_ddr  DDRC
;#define key_pin  PINC
;#define lcd_dprt PORTA
;#define lcd_dddr DDRA
;#define lcd_dpin PINA
;#define lcd_cprt PORTB
;#define lcd_cddr DDRB
;#define lcd_cpin PINB
;#define lcd_rs 0
;#define lcd_rw 1
;#define lcd_en 2
;#define NameSize 4
;
;
;unsigned char*  keypad[3][4] =  { "1","4","7","*",
;                                  "2","5","8","0",
;                                  "3","6","9","#",};

	.DSEG
_0x3:
	.BYTE 0x18
;
;
;
;unsigned char* AllowList[NameSize+1][3]={{"10","0","0"},{"20","0","0"},{"","0","0"},{"","0","0"},{"","0","0"}};
_0x5:
	.BYTE 0x1D
;
;
;unsigned char colloc , rowloc;
;unsigned char* CodeID = "";
_0x7:
	.BYTE 0x1
;unsigned char counter=0;
;unsigned char ShowMenu = 0;
;unsigned char MenuOption = 0;
;unsigned char RegisteredCount = 2;
;unsigned char registration = 0;
;unsigned char code = 4;
;unsigned char* AccessResult1 = "";
_0x8:
	.BYTE 0x1
;unsigned char* list = "";
_0xA:
	.BYTE 0x1
;unsigned char * menu= "1)Delete   2)Insert 3)History->";
_0xC:
	.BYTE 0x20
;
;
;void lcdCommand(unsigned char cmnd){
; 0000 0032 void lcdCommand(unsigned char cmnd){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0033    lcd_dprt = cmnd;
;PCODE: $0000000F VOL: 0
;	cmnd -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0034    lcd_cprt &= ~(1<<lcd_rs);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0035    lcd_cprt &= ~(1<<lcd_rw);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0036    lcd_cprt |= (1<<lcd_en);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0037    delay_us(1);
;PCODE: $00000018 VOL: 0
; 0000 0038    lcd_cprt &= ~(1<<lcd_en);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0039    delay_us(100);
;PCODE: $0000001B VOL: 0
; 0000 003A }
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;
;void lcdData(unsigned char data){
; 0000 003C void lcdData(unsigned char data){
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 003D 
; 0000 003E     lcd_dprt = data;
;PCODE: $00000021 VOL: 0
;	data -> Y+0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 003F     lcd_cprt |= (1<<lcd_rs);
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0040     lcd_cprt &= ~(1<<lcd_rw);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0041     lcd_cprt |= (1<<lcd_en);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0042     delay_us(1);
;PCODE: $0000002A VOL: 0
; 0000 0043     lcd_cprt &= ~(1<<lcd_en);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0044     delay_us(100);
;PCODE: $0000002D VOL: 0
; 0000 0045 }
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;
;void lcd_init(){
; 0000 0047 void lcd_init(){
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0048     lcd_dddr = 0xff;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0049     lcd_cddr = 0xff;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 004A     lcd_cprt &= ~(1<<lcd_en);
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 004B     delay_us(2000);
;PCODE: $00000039 VOL: 0
; 0000 004C     lcdCommand(0x38);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 004D     lcdCommand(0x0C);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 004E     lcdCommand(0x01);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 004F     delay_us(2000);
;PCODE: $00000040 VOL: 0
; 0000 0050     lcdCommand(0x06);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0051 }
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;
;void lcd_gotoxy(unsigned char x , unsigned char y){
; 0000 0053 void lcd_gotoxy(unsigned char x , unsigned char y){
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0054    unsigned char firstCharAdr[] = {0x80,0xc0,0x94,0xd4};
; 0000 0055    lcdCommand(firstCharAdr[y-1] + x-1 );
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;	x -> Y+5
;	y -> Y+4
;	firstCharAdr -> Y+0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0056    delay_us(100);
;PCODE: $0000005B VOL: 0
; 0000 0057 
; 0000 0058 }
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;
;void lcd_print(char* str){
; 0000 005A void lcd_print(char* str){
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 005B     unsigned char i = 0;
; 0000 005C     while( i < strlen(str)){
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;	*str -> Y+1
;	i -> R17
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 005D        lcdData(str[i]);
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 005E        i++;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 005F     }
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0060 }
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;
;void CleenLCD(){
; 0000 0062 void CleenLCD(){
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0063      lcdCommand(0x01);
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0064      delay_us(100);
;PCODE: $0000007D VOL: 0
; 0000 0065      lcd_gotoxy(1,1);
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0066      delay_us(100);
;PCODE: $00000082 VOL: 0
; 0000 0067 }
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;
;
;
;void LED_Ok(){
; 0000 006B void LED_Ok(){
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 006C     LED_R = 0;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 006D     LED_G = 255;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 006E     LED_B = 0;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 006F     delay_ms(100);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 0070     LED_R = 0;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0071     LED_G = 0;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0072     LED_B = 0;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0073 }
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;
;void LED_Error(){
; 0000 0075 void LED_Error(){
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0076     LED_R = 255;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0077     LED_G = 0;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0078     LED_B = 0;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0079     delay_ms(100);
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 007A     LED_R = 0;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 007B     LED_G = 0;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 007C     LED_B = 0;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 007D }
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;
;void LED_Warning(){
; 0000 007F void LED_Warning(){
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0080     LED_R = 255;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 0081     LED_G = 255;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0082     LED_B = 0;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 0083     delay_ms(100);
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0084     LED_R = 0;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0085     LED_G = 0;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 0086     LED_B = 0;
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 0087 }
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;
;
;void ShowMyMenu(){
; 0000 008A void ShowMyMenu(){
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 008B 
; 0000 008C     CleenLCD();
;PCODE: $000000C0 VOL: 0
; 0000 008D     sprintf(menu,"1)Delete   2)Insert 3)History ->");
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 008E     lcd_print(menu);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 008F     MenuOption = 1;
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 0090 
; 0000 0091 }
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;//*********************************************************************************************************
;
;void History(){
; 0000 0094 void History(){
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0095 
; 0000 0096     unsigned char i = 0;
; 0000 0097     sprintf(list,"");
;PCODE: $000000D2 VOL: 0
;	i -> R17
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 0098     CleenLCD();
;PCODE: $000000DE VOL: 0
; 0000 0099     for(i = 0; i < NameSize ; i++){
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 009A         if(strcmp(AllowList[i][0],"") && strcmp(AllowList[i][0],"10")){
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 009B             strcat(list,AllowList[i][0]);
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 009C             strcat(list,"->");
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 009D             strcat(list,AllowList[i][2]);
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 009E             strcat(list," ");
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 009F         }
; 0000 00A0     }
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00A1     lcd_print(list);
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 00A2     delay_ms(100);
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 00A3     CleenLCD();
;PCODE: $0000012A VOL: 0
; 0000 00A4     strcmp(list,"");
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 00A5     registration = 0;
;PCODE: $00000130 VOL: 0
; 0000 00A6     MenuOption = 0;
;PCODE: $00000131 VOL: 0
; 0000 00A7     code = 4;
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 00A8     strcpy(CodeID,"");
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 00A9 
; 0000 00AA }
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0

	.DSEG
_0x39:
	.BYTE 0xB
;
;
;void InsertORDelete(){
; 0000 00AD void InsertORDelete(){

	.CSEG
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 00AE     unsigned char * menu_options = "Enter ID For Delete -> ";
; 0000 00AF     CleenLCD();
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;	*menu_options -> R16,R17
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 00B0 
; 0000 00B1 
; 0000 00B2     if(code == 1){
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 00B3           strcpy(menu_options,"Enter ID For Delete -> ");
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 00B4           registration = 1;
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 00B5           lcd_print(menu_options);
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 00B6     }
; 0000 00B7     else if(code == 2){
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 00B8            strcpy(menu_options,"Enter ID For Insert -> ");
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 00B9            registration = 2;
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 00BA            lcd_print(menu_options);
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 00BB     }
; 0000 00BC     else if(code == 3){
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 00BD         History();
;PCODE: $00000160 VOL: 0
; 0000 00BE        registration = 3;
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 00BF     }
; 0000 00C0     else{
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 00C1          strcpy(menu_options,"unknown Command!");
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 00C2          lcd_print(menu_options);
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 00C3          delay_ms(100);
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 00C4          CleenLCD();
;PCODE: $0000016E VOL: 0
; 0000 00C5          registration = 0;
;PCODE: $0000016F VOL: 0
; 0000 00C6     }
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 00C7 
; 0000 00C8      MenuOption = 0;
;PCODE: $00000173 VOL: 0
; 0000 00C9      code = 4;
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 00CA }
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0

	.DSEG
_0x3C:
	.BYTE 0x59
;
;
;
;void Delete(){
; 0000 00CE void Delete(){

	.CSEG
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 00CF 
; 0000 00D0     unsigned char* result = "Memory Is Empty";
; 0000 00D1     unsigned char* error = "Memory Is Empty";
; 0000 00D2     unsigned char find = 0;
; 0000 00D3     CleenLCD();
;PCODE: $0000017B VOL: 0
;	*result -> R16,R17
;	*error -> R18,R19
;	find -> R21
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 00D4     counter = 1;
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 00D5 
; 0000 00D6 
; 0000 00D7     if (RegisteredCount < 2){
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 00D8        strcpy(error,"Memory Is Empty");
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 00D9        result = error;
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0000 00DA     }
; 0000 00DB     else{
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 00DC         while(counter<NameSize){
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0000 00DD             if(!strncmp(AllowList[counter][0],CodeID,2)){
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
; 0000 00DE                strcpy(AllowList[counter][0],"");
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 00DF                strcpy(AllowList[counter][2],"0");
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
; 0000 00E0                RegisteredCount--;
;PCODE: $000001B7 VOL: 0
; 0000 00E1                find = 1;
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 00E2                break;
;PCODE: $000001BA VOL: 0
; 0000 00E3             }
; 0000 00E4             counter = counter + 1;
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 00E5         }
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 00E6         if(find == 1){
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 00E7             strcpy(result,"Access ");
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 00E8             result=strcat(result,CodeID);
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0000 00E9             result=strcat(result," Deleted.");
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 00EA         }else{
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 00EB             strcpy(result,CodeID);
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
; 0000 00EC             result=strcat(result," Not Found.");
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 00ED         }
;PCODE: $000001D9 VOL: 0
; 0000 00EE     }
;PCODE: $000001DA VOL: 0
; 0000 00EF 
; 0000 00F0     lcd_print(result);
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 00F1     LED_Warning();
;PCODE: $000001DD VOL: 0
; 0000 00F2     CleenLCD();
;PCODE: $000001DE VOL: 0
; 0000 00F3     registration = 0;
;PCODE: $000001DF VOL: 0
; 0000 00F4     strcpy(CodeID,"");
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0000 00F5     counter = 0;
;PCODE: $000001E4 VOL: 0
; 0000 00F6 }
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0

	.DSEG
_0x43:
	.BYTE 0x52
;
;
;void Insert(){
; 0000 00F9 void Insert(){

	.CSEG
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 00FA 
; 0000 00FB     unsigned char* value = "0";
; 0000 00FC     counter = 0;
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;	*value -> R16,R17
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
; 0000 00FD 
; 0000 00FE     CleenLCD();
;PCODE: $000001F1 VOL: 0
; 0000 00FF     if( RegisteredCount < NameSize){
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 0100 
; 0000 0101         while(counter < NameSize){
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
; 0000 0102             strcpy(value, AllowList[counter][0]);
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 0103             if(!strncmp(value,"",2)){
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 0104                 sprintf(AllowList[counter][0],"%s",CodeID);
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 0105                 RegisteredCount = RegisteredCount+1;
;PCODE: $0000021B VOL: 0
; 0000 0106                 break;
;PCODE: $0000021C VOL: 0
; 0000 0107             }
; 0000 0108             counter = counter + 1;
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 0109         }
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 010A         strcpy(AccessResult1,"Access ");
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
; 0000 010B         AccessResult1=strcat(AccessResult1,AllowList[counter][0]);
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
; 0000 010C         AccessResult1=strcat(AccessResult1," Granted");
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
; 0000 010D     }
; 0000 010E     else{
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 010F         strcpy(AccessResult1,"Memory Is Full");
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
; 0000 0110     }
;PCODE: $0000023E VOL: 0
; 0000 0111     lcd_print(AccessResult1);
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
; 0000 0112     LED_Warning();
;PCODE: $00000241 VOL: 0
; 0000 0113     CleenLCD();
;PCODE: $00000242 VOL: 0
; 0000 0114     registration = 0;
;PCODE: $00000243 VOL: 0
; 0000 0115     strcpy(CodeID,"");
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
; 0000 0116     strcpy(AccessResult1,"");
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
; 0000 0117     counter = 0;
;PCODE: $0000024D VOL: 0
; 0000 0118 }
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0

	.DSEG
_0x4C:
	.BYTE 0x25
;
;
;// (flag=1 means Admin)  (flag=2 means Valid Login)  (flag=* means Invalid Login)
;unsigned char* CheckAccess(){
; 0000 011C unsigned char* CheckAccess(){

	.CSEG
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
; 0000 011D     unsigned char value = 0;
; 0000 011E 
; 0000 011F     unsigned char empty;
; 0000 0120     unsigned char* flag = "*";
; 0000 0121     CleenLCD();
;PCODE: $00000253 VOL: 0
;	value -> R17
;	empty -> R16
;	*flag -> R18,R19
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
; 0000 0122 
; 0000 0123     while(counter < NameSize & strlen(CodeID)>0 ){
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
; 0000 0124 
; 0000 0125         if(!strncmp(CodeID,AllowList[counter][0],2)){
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
; 0000 0126             empty = 1;
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
; 0000 0127             value = atoi(AllowList[counter][2]);
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
; 0000 0128             value++;
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
; 0000 0129             strcpy(AllowList[counter][2],"");
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
; 0000 012A             sprintf(AllowList[counter][2],"%d",value);
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
; 0000 012B             if(counter == 0)
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
; 0000 012C                 strcpy(flag , "1");
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
; 0000 012D             else{
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
; 0000 012E                 strcpy(flag , "2");
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
; 0000 012F                 }
;PCODE: $000002AA VOL: 0
; 0000 0130            break;
;PCODE: $000002AB VOL: 0
; 0000 0131         }
; 0000 0132         counter = counter +1;
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
; 0000 0133     }
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
; 0000 0134     if(empty != 1)
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
; 0000 0135        strcpy(flag , "*");
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
; 0000 0136     strcpy(CodeID,"");
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
; 0000 0137     counter = 0;
;PCODE: $000002BC VOL: 0
; 0000 0138     return flag;
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
; 0000 0139 }
;PCODE: $000002C1 VOL: 0

	.DSEG
_0x53:
	.BYTE 0xA
;
;
;
;
;void ReadKeyPad(){
; 0000 013E void ReadKeyPad(){

	.CSEG
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
; 0000 013F     unsigned char * result = "-";
; 0000 0140     do{
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;	*result -> R16,R17
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
; 0000 0141         key_prt &=0x0F;
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
; 0000 0142         colloc = (key_pin & 0x0F);
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
; 0000 0143 
; 0000 0144     }while(colloc !=0x0F);
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
; 0000 0145 
; 0000 0146     do{
;PCODE: $000002D6 VOL: 0
; 0000 0147         do{
;PCODE: $000002D7 VOL: 0
; 0000 0148             delay_ms(20);
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
; 0000 0149             colloc = (key_pin & 0x0F);
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
; 0000 014A         }while(colloc == 0x0F);
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
; 0000 014B         delay_ms(20);
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
; 0000 014C         colloc = (key_pin & 0x0F);
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
; 0000 014D     }while(colloc == 0x0F);
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
; 0000 014E 
; 0000 014F 
; 0000 0150 
; 0000 0151     while(1){
;PCODE: $000002F0 VOL: 0
; 0000 0152 
; 0000 0153         key_prt = 0xEF;
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
; 0000 0154         colloc = (key_pin &0x0F);
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
; 0000 0155         if(colloc != 0x0F){
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
; 0000 0156             rowloc = 0;
;PCODE: $000002F9 VOL: 0
; 0000 0157             break;
;PCODE: $000002FA VOL: 0
; 0000 0158         }
; 0000 0159 
; 0000 015A 
; 0000 015B         key_prt = 0xDF;
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
; 0000 015C         colloc = (key_pin & 0x0F);
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
; 0000 015D         if(colloc != 0x0F){
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
; 0000 015E            rowloc = 1;
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
; 0000 015F             break;
;PCODE: $00000306 VOL: 0
; 0000 0160         }
; 0000 0161 
; 0000 0162 
; 0000 0163         key_prt = 0xBF;
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
; 0000 0164         colloc = (key_pin & 0x0F);
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
; 0000 0165         if(colloc != 0x0F){
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
; 0000 0166            rowloc = 2;
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
; 0000 0167             break;
;PCODE: $00000312 VOL: 0
; 0000 0168         }
; 0000 0169     }
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
; 0000 016A 
; 0000 016B 
; 0000 016C     if(colloc == 0x0E){
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
; 0000 016D         if(MenuOption == 1){
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
; 0000 016E            if(rowloc == 0 ){
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
; 0000 016F               code = 1;
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
; 0000 0170               InsertORDelete();
;PCODE: $00000320 VOL: 0
; 0000 0171            }
; 0000 0172            else if (rowloc == 1){
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
; 0000 0173               code = 2;
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
; 0000 0174               InsertORDelete();
;PCODE: $00000328 VOL: 0
; 0000 0175            }
; 0000 0176            else if (rowloc == 2){
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
; 0000 0177               code = 3;
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
; 0000 0178               InsertORDelete();
;PCODE: $00000330 VOL: 0
; 0000 0179            }
; 0000 017A         }
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
; 0000 017B 
; 0000 017C         else{
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
; 0000 017D             CodeID = strcat(CodeID, keypad[rowloc][0]);
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
; 0000 017E             lcd_print(keypad[rowloc][0]);
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
; 0000 017F         }
;PCODE: $00000348 VOL: 0
; 0000 0180     }
; 0000 0181     else if(colloc == 0x0D){
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
; 0000 0182             CodeID = strcat(CodeID, keypad[rowloc][1]);
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
; 0000 0183             lcd_print(keypad[rowloc][1]);
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
; 0000 0184     }
; 0000 0185     else if(colloc == 0x0B){
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
; 0000 0186             CodeID = strcat(CodeID, keypad[rowloc][2]);
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
; 0000 0187             lcd_print(keypad[rowloc][2]);
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
; 0000 0188     }
; 0000 0189     else{
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
; 0000 018A 
; 0000 018B         if(rowloc == 0 & registration == 2){
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
; 0000 018C             Insert();
;PCODE: $00000386 VOL: 0
; 0000 018D         }
; 0000 018E         else if(rowloc == 0 & registration == 1){
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
; 0000 018F             Delete();
;PCODE: $00000392 VOL: 0
; 0000 0190         }
; 0000 0191         else if(rowloc == 0){
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
; 0000 0192             strcpy(result,CheckAccess());
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
; 0000 0193             if(ShowMenu == 1){
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
; 0000 0194                 if(!(strcmp(result,"1"))){
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
; 0000 0195                     ShowMyMenu();
;PCODE: $000003A4 VOL: 0
; 0000 0196                 }
; 0000 0197                 else{
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
; 0000 0198                     lcd_print("Access Denied!");
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
; 0000 0199                     delay_ms(100);
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
; 0000 019A                     CleenLCD();}
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
; 0000 019B                 ShowMenu = 0;
;PCODE: $000003AF VOL: 0
; 0000 019C             }
; 0000 019D             else if(!strcmp(result,"*")){
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
; 0000 019E                 lcd_print("Access Denied!");
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
; 0000 019F                 LED_Error();
;PCODE: $000003BB VOL: 0
; 0000 01A0                 CleenLCD();
;PCODE: $000003BC VOL: 0
; 0000 01A1             }
; 0000 01A2             else{
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
; 0000 01A3                 lcd_print("Access Granted!");
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
; 0000 01A4                 LED_Ok();
;PCODE: $000003C2 VOL: 0
; 0000 01A5                 CleenLCD();
;PCODE: $000003C3 VOL: 0
; 0000 01A6             }
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
; 0000 01A7         }
; 0000 01A8         else if( rowloc == 2 ){
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
; 0000 01A9             lcd_print("Enter ID -> ");
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
; 0000 01AA             ShowMenu = 1;
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
; 0000 01AB         }
; 0000 01AC         else {
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
; 0000 01AD                  CodeID = strcat(CodeID, keypad[rowloc][3]);
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
; 0000 01AE                  lcd_print(keypad[rowloc][3]);
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
; 0000 01AF         }
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
; 0000 01B0     }
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
; 0000 01B1 }
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0

	.DSEG
_0x5B:
	.BYTE 0x41
;
;
;
;
;
;
;
;
;
;void main(void)
; 0000 01BC {

	.CSEG
;PCODE: $000003F0 VOL: 0
; 0000 01BD 
; 0000 01BE     DDRD.0 = 1;
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
; 0000 01BF     DDRD.1 = 1;
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
; 0000 01C0     DDRD.2 = 1;
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
; 0000 01C1     LED_R = 0;
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
; 0000 01C2     LED_G = 0;
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
; 0000 01C3     LED_B = 0;
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
; 0000 01C4 
; 0000 01C5     key_ddr = 0xF0;
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
; 0000 01C6     key_prt = 0xFF;
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
; 0000 01C7 
; 0000 01C8     lcd_init();
;PCODE: $00000401 VOL: 0
; 0000 01C9 
; 0000 01CA     lcd_gotoxy(1,1);
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
; 0000 01CB 
; 0000 01CC 
; 0000 01CD     while(1){
;PCODE: $00000406 VOL: 0
; 0000 01CE         ReadKeyPad();
;PCODE: $00000407 VOL: 0
; 0000 01CF     }
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
; 0000 01D0 }
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
